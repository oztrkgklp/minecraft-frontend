# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI CD Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - name: Pull the repository
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }} to build the app
      run: |
        npm i --legacy-peer-deps
        npm run build-dev
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - name: Pull the repository
      uses: actions/checkout@v2
    - name: Generate environment variables
      run: |
        echo 'HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }}' >> $GITHUB_ENV
        echo 'HEROKU_EMAIL=${{ secrets.HEROKU_EMAIL }}' >> $GITHUB_ENV
        echo 'HEROKU_USERNAME=${{ secrets.HEROKU_USERNAME }}' >> $GITHUB_ENV
        echo 'APP=${{ secrets.HEROKU_APP_DEV }}' >> $GITHUB_ENV
        echo 'API_DOMAIN=${{ secrets.HEROKU_API_DOMAIN }}' >> $GITHUB_ENV
        echo 'APP_DOMAIN=${{ secrets.HEROKU_APP_DOMAIN_DEV }}' >> $GITHUB_ENV
        echo 'REGISTRY=${{ secrets.REGISTRY }}' >> $GITHUB_ENV
        echo 'NODE_ENV=dev' >> $GITHUB_ENV
    - name: Login to Heroku container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.HEROKU_USERNAME }}
        password: ${{ env.HEROKU_API_KEY }}
    - name: Use Node.js ${{ matrix.node-version }} to deploy the app
      shell: bash
      run: |
        npm i --legacy-peer-deps
        npm run deploy-dev